{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/Services/apiparser/apiparser.service.ts","webpack:///src/app/Services/registration/registration.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/file-upload/file-upload.component.html","webpack:///src/app/file-upload/file-upload.component.ts","webpack:///src/app/file-upload/file-upload.module.ts","webpack:///src/app/file-upload/file-upload.routing.ts","webpack:///src/app/main-module/main-module.component.html","webpack:///src/app/main-module/main-module.component.ts","webpack:///src/app/main-module/main-module.module.ts","webpack:///src/app/main-module/main-module.routing.ts","webpack:///src/app/views/common/footer/footer.component.ts","webpack:///src/app/views/common/footer/footer.component.html","webpack:///src/app/views/common/header/header.component.ts","webpack:///src/app/views/common/header/header.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ApiparserService","httpClient","Router","url","method","data","needRaw","headers","httpOptions","parse","pipe","reqPromise","reject","subscribe","res","response","status","navigate","error","providedIn","RegistrationService","parser","login","params","hit","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","FileUploadComponent","ApiParser","uploaded","event","file","target","files","user","FormData","append","form","value","password","result","upload","fileattach","FileUploadModule","path","component","FileUploadRoutingModule","forChild","MainModuleComponent","router","route","step","QuestionCounter","resultArray","timer","stopTimer","currentQuestion","currentAnswere","red","blue","green","storeAnswere","submitQuiz","sum","i","parseInt","quizeList","currentQuiz","questions","correct_answer","console","log","QuestionChange","document","getElementById","click","start","timerFunc","setTimeout","startQuize","index","valid","resp","userDetails","userToSend","register","err","Object","MainModuleModule","MainModuleRoutingModule","FooterComponent","HeaderComponent","loggedIn","home","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders} from  '@angular/common/http';\nimport {Router} from \"@angular/router\";\nimport { timeout } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiparserService {\n  constructor(\n    private  httpClient:  HttpClient, private Router: Router\n  ) { }\n\n\n  hit(url, method, data, needRaw=false, headers=false){\n    url = \"http://localhost:4000\" + url;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n      })\n    };\n   \n    return this.parse(\n      this.httpClient[method](url, data, httpOptions).pipe(\n        timeout(60000)\n      ), needRaw, headers\n    );\n  }\n\n  file(url, method, data, needRaw=false, headers=false){\n    url = \"http://localhost:4000\" + url;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n      })\n    };\n   \n    return this.parse(\n      this.httpClient[method](url, data).pipe(\n        timeout(60000)\n      ), needRaw, headers\n    );\n  }\n  private parse(reqPromise, needRaw, headers){\n    return new Promise((resolve, reject)=>{\n      reqPromise.subscribe(function(res){\n        let response = res ? (res.data || res) : res;\n        resolve(response);\n      }, (res)=>{\n        if(res && res.status === 401){\n          this.Router.navigate(['/']);\n        }\n        reject(res.error);\n      });\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ApiparserService } from '../apiparser/apiparser.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegistrationService {\n\n\n  constructor(private parser: ApiparserService) { }\n\n  register(params){\n    return this.parser.hit('/user/register', 'post', params);\n  }\n\n  login = (params)=>{ \n    return this.parser.hit('/user/login', 'post', params);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'frontEnd';\n}\n","<app-header></app-header>\n<router-outlet ></router-outlet>\n<app-footer></app-footer>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MainModuleModule } from './main-module/main-module.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { HeaderComponent } from './views/common/header/header.component';\nimport { FooterComponent } from './views/common/footer/footer.component';\nimport { FileUploadModule } from './file-upload/file-upload.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    FooterComponent,\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MainModuleModule,\n    HttpClientModule,\n    NgbModule,\n    FileUploadModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\n<div  class=\"home-main-container\">\n    <div class=\"developer_registartion\">\n     <div class=\"container\">\n       <div class=\"main-registration-part\">\n        \n         <div class=\"step-1-section\">\n           <h2>Fill Your Details</h2>\n           <div class=\"step-form-information\">\n             <div class=\"row\">\n               <div class=\"col-md-6 col-sm-6\">\n                 <form class=\"w_60\" #user=\"ngForm\" (ngSubmit)=\"upload(user)\" >\n                   <div class=\"form-group\">\n                    <label>Password</label>\n                    <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\n                    <input ngModel #password=\"ngModel\" required  class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\" minlength=\"8\">\n                    <p class=\"text-danger\" *ngIf=\"!password.valid && user.submitted\">\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"password.errors.required\">Password is required!</span>\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"password.errors.minlength\">Please enter a valid password with 8 charecters.</span>\n                    </p>\n                  </div>\n\n                 \n                  <div class=\"form-group\">\n                    <label>Select File</label>\n                    <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\n                    <input ngModel #file=\"ngModel\" class=\"form-control\" type=\"file\" name=\"file\" (change)=\"fileattach($event)\">\n                    \n                  </div>\n                  \n\n\n                   <button type=\"submit\" class=\"button btn-steps\">Continue</button>\n                 </form>\n                 <div *ngIf=\"uploaded\" >\n                  <p class=\"text-danger\">Your File Is Uploaded</p>\n               </div>\n               </div>\n               \n             </div>\n           </div>\n         </div>\n      ","import { NgForm } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders} from  '@angular/common/http';\nimport { ApiparserService } from '../Services/apiparser/apiparser.service';\n\n\n@Component({\n  selector: 'app-file-upload',\n  templateUrl: './file-upload.component.html',\n  styleUrls: ['./file-upload.component.scss']\n})\nexport class FileUploadComponent implements OnInit {\n  constructor(\n    private ApiParser : ApiparserService\n  ){}\n  public file : any;\n  public uploaded = false;\n  fileattach(event){\n    this.file = event.target.files[0];\n  }\n\n  async upload(user:NgForm){\n    let data = new FormData();\n    data.append('file' , this.file);\n    data.append('password' , user.form.value.password);\n    this.ApiParser.file('/upload' , 'post' , data).then((result) =>{\n     if(result[0] === \"true\"){\n       this.uploaded =true;\n     }\n    });\n  }\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule }   from '@angular/forms';\nimport { FileUploadRoutingModule } from \"./file-upload.routing\"\nimport { FileUploadComponent } from './file-upload.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [FileUploadComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FileUploadRoutingModule,\n    NgbModule\n  ]\n})\nexport class FileUploadModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FileUploadComponent } from './file-upload.component';\n\nconst routes: Routes = [\n  { path: 'upload',  component: FileUploadComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FileUploadRoutingModule { }","\n<div *ngIf=\"(step === 1)||(step === 2)\" class=\"home-main-container\">\n    <div class=\"developer_registartion\">\n     <div class=\"container\">\n       <div class=\"main-registration-part\">\n         <div class=\"heading-11\">\n           <h2>Join OfQuiz </h2>\n           <p>Submit your details for Sign-Up</p>\n         </div>\n         <div class=\"tab-section\">\n           <div class=\"Coloumn-gap\">\n             <div class=\"steps-details\">\n               <ul>\n                 <li *ngIf=\"(step == 1)\"><img src=\"assets/images/Head-Icon.png\" alt=\"\"></li>\n                 <li *ngIf=\"!(step == 1)\"><img src=\"assets/images/HeadGrey.png\" alt=\"\"></li>\n                 <li><p style=\"margin-top:4px !important;\">Step 1: <span>Complete the form</span></p></li>\n               </ul>\n             </div>\n           </div>\n           <div class=\"Coloumn-gap\">\n             <div class=\"steps-details\">\n               <ul>\n                 <li *ngIf=\"!(step == 2)\"><img src=\"assets/images/link_icon_grey.png\" alt=\"\"></li>\n                 <li *ngIf=\"(step == 2)\"><img src=\"assets/images/link_icon_blue.png\" alt=\"\"></li> \n                 <li><p style=\"margin-top:4px !important;\">Step 2: <span>Save and Veiw Quizes</span></p></li>\n               </ul>\n             </div>\n           </div>\n         </div>\n         <div *ngIf=\"step == 1\">\n         <div class=\"step-1-section\">\n           <h2>Fill Your Details</h2>\n           <div class=\"step-form-information\">\n             <div class=\"row\">\n               <div class=\"col-md-6 col-sm-6\">\n                 <form class=\"w_60\" #user=\"ngForm\" (ngSubmit)=\"register(user)\" >\n                   <div class=\"form-group\">\n                     <label>First Name</label>\n                     <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\n                     <input ngModel #firstName=\"ngModel\" required  class=\"form-control\" type=\"text\" name=\"firstName\" placeholder=\"First Name\" pattern=\"[a-zA-Z][a-zA-Z ]+\">\n                     <p class=\"text-danger\" *ngIf=\"!firstName.valid && user.submitted\">\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"firstName.errors.required\">First Name is required!</span>\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"firstName.errors.pattern\">Please enter a valid Name.</span>\n                     </p>\n                   </div>\n                   <div class=\"form-group\">\n                     <label>Last Name</label>\n                     <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\n                     <input ngModel #lastName=\"ngModel\" required  class=\"form-control\" type=\"text\" name=\"lastName\" placeholder=\"Last Name\" pattern=\"[a-zA-Z][a-zA-Z ]+\">\n                     <p class=\"text-danger\" *ngIf=\"!lastName.valid && user.submitted\">\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"lastName.errors.required\">Last Name is required!</span>\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"lastName.errors.pattern\">Please enter a valid last name.</span>\n                     </p>\n                   </div>\n                   <div class=\"form-group\">\n                     <label>Email</label>\n                     <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\n                     <input ngModel #email=\"ngModel\" required  class=\"form-control\" type=\"email\" name=\"email\" placeholder=\"Email\" pattern=\"^[_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$\">\n                     <p class=\"text-danger\" *ngIf=\"!email.valid && user.submitted\">\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"email.errors.required\">Email is required!</span>\n                       <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"email.errors.pattern\">Please enter a valid email address.</span>\n                     </p>\n                   </div>\n\n                   <div class=\"form-group\">\n                    <label>Password</label>\n                    <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\n                    <input ngModel #password=\"ngModel\" required  class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"Password\" minlength=\"8\">\n                    <p class=\"text-danger\" *ngIf=\"!password.valid && user.submitted\">\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"password.errors.required\">Password is required!</span>\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"password.errors.minlength\">Please enter a valid password with 8 charecters.</span>\n                    </p>\n                  </div>\n\n                  <div class=\"form-group\">\n                    <label>Branch</label>\n                    <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\n                    <input ngModel #branch=\"ngModel\" required  class=\"form-control\" type=\"text\" name=\"branch\" placeholder=\"Branch\" pattern=\"[a-zA-Z][a-zA-Z ]+\">\n                    <p class=\"text-danger\" *ngIf=\"!branch.valid && user.submitted\">\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"branch.errors.required\">Branch is required!</span>\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"branch.errors.pattern\">Please enter a valid Branch Name.</span>\n                    </p>\n                  </div>\n\n                  <div class=\"form-group\">\n                    <label>Semester</label>\n                    <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\n                    <input ngModel #Semester=\"ngModel\" required  class=\"form-control\" type=\"text\" name=\"Semester\" placeholder=\"Semester\" pattern=\"[0-9]\" maxlength=\"1\">\n                    <p class=\"text-danger\" *ngIf=\"!branch.valid && user.submitted\">\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"Semester.errors.required\">Semester is required!</span>\n                      <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"Semester.errors.pattern\">Please enter a single digit Semester.</span>\n                    </p>\n                  </div>\n\n\n                   <button type=\"submit\" class=\"button btn-steps\">Continue</button>\n                 </form>\n                 \n               </div>\n               <div class=\"col-md-6 col-sm-6\">\n                 <div class=\"free-points\">\n                   <h2>You’ll love OfQuiz</h2>\n                   <div class=\"free\">\n                     <p><a>Free!</a> Login Here</p>\n                     <div class=\"loginContainer\">\n                     <form class=\"w_60 formLogin\" #user1=\"ngForm\" (ngSubmit)=\"login(user1)\" >\n                      <div class=\"form-group\">\n                        <label>Email</label>\n                        <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\n                        <input ngModel #email1=\"ngModel\" required  class=\"form-control\" type=\"email\" name=\"email1\" placeholder=\"Email\" pattern=\"^[_a-z0-9]+(\\.[_a-z0-9]+)*@[a-z0-9-]+(\\.[a-z0-9-]+)*(\\.[a-z]{2,4})$\">\n                        <p class=\"text-danger\" *ngIf=\"!email1.valid && user1.submitted\">\n                          <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"email1.errors.required\">Email is required!</span>\n                          <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"email1.errors.pattern\">Please enter a valid email address.</span>\n                        </p>\n                      </div>\n                      <div class=\"form-group\">\n                        <label>Password</label>\n                        <!-- <input type=\"text\" class=\"form-control custom-idea\"> -->\n                        <input ngModel #password1=\"ngModel\" required  class=\"form-control\" type=\"password\" name=\"password1\" placeholder=\"Password\" minlength=\"8\">\n                        <p class=\"text-danger\" *ngIf=\"!password1.valid && user1.submitted\">\n                          <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"password1.errors.required\">Password is required!</span>\n                          <span class=\"d-block text-left mt-1 ml-1 small text-danger\" *ngIf=\"password1.errors.minlength\">Please enter a valid password with 8 charecters.</span>\n                        </p>\n                      </div>\n\n                      <div class=\"for-group\"><button type=\"submit\" class=\"button btn-steps\">Continue</button></div>\n                     </form>\n                     </div>\n                   </div>\n                 </div>\n               </div>\n             </div>\n           </div>\n         </div>\n       </div>\n       <div *ngIf=\"step == 2\">\n        <div class=\"step-2-section\">\n\n        </div>\n           <div class=\"tableRow\">\n             <div class=\"tableCell\">Name</div>\n             <div class=\"tableCell\">start Link</div>\n\n           </div>\n           <div *ngFor=\"let quize of quizeList; index as i;\" class=\"tableRow\">\n            <div class=\"tableCell\">{{quize.Name}}</div>\n            <div class=\"tableCell\" (click)=\"startQuize(i)\">start Now</div>\n\n          </div>\n        </div>\n\n      </div>\n           \n       </div>\n           \n         </div>\n       </div>\n\n       <div *ngIf=\"step === 3\">\n        <div class=\"QuizContainer\">\n          <div class=\"infoSection\">\n            <div class=\"QuizHeading\">Quiz 1</div>\n            <div class=\"counterBox\">Question : {{currentQuestion + 1}}/20</div>\n            <div class=\"timerBox\"> :{{timer}} </div>\n          </div>\n          <div class=\"questionBox\">\n            <div class=\"question\">Question Number {{currentQuestion + 1}}: {{quizeList[currentQuiz].questions[currentQuestion].question}}</div>\n            <div class=\"optionBox\">\n              <div class=\"form-group\" *ngFor=\"let answere of quizeList[currentQuiz].questions[currentQuestion].answers; index as i;\">\n                <div class=\"form-control\">\n                  <label class=\"radio-inline\">\n                   <input [value]=\"i\" type=\"radio\" name=\"options\" (change)=\"storeAnswere(i)\"> {{answere}}\n                  </label>\n                </div>\n              </div>\n            </div>\n            <button id=\"nextQuestion\" class=\" button nextButton\" (click)=\"QuestionChange()\" >Next</button>\n            <button id=\"submitQuiz\" class=\" button nextButton\" (click)=\"submitQuiz()\" >Submit Quiz</button>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"step === 4\">\n        \n        <div class=\"resultContainer\">\n          <div><h2>Following Is Your Result:</h2></div>\n          <div *ngIf=\"red\" class=\"circle red\">\n            {{result}}%\n          </div>\n          <div *ngIf=\"blue\" class=\"circle blue\">\n            {{result}}%\n          </div>\n          <div *ngIf=\"green\" class=\"circle green\">\n            {{result}}%\n          </div>\n          <div class=\"button nextButton\" (click)=\"home()\">Home</div>\n        </div>\n      \n      </div>\n     \n   ","import { NgForm } from '@angular/forms';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { RegistrationService } from '../Services/registration/registration.service'\nimport { CommonModule } from '@angular/common';  \nimport { BrowserModule } from '@angular/platform-browser';\nimport { ApiparserService } from '../Services/apiparser/apiparser.service';\nimport { async } from '@angular/core/testing';\nimport { promise } from 'protractor';\nimport { delay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-module',\n  templateUrl: './main-module.component.html',\n  styleUrls: ['./main-module.component.scss']\n})\nexport class MainModuleComponent implements OnInit {\n  public step = 1;\n  public QuestionCounter = 0;\n  public resultArray = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];\n  public userDetails;\n  public quizeList;\n  public currentQuiz;\n  public timer = 30;\n  public stopTimer = 0;\n  public currentQuestion = 0;\n  public currentAnswere = 0;\n  public result = 0;\n  public red = false;\n  public blue = false;\n  public green = false;\n  constructor(\n    private router: Router,\n    private route: ActivatedRoute,\n    private RegistrationService: RegistrationService,\n    private ApiParser : ApiparserService\n    ){}\n\n  storeAnswere = (data)=>{\n    this.currentAnswere = data; \n  }  \n\n  submitQuiz = ()=>{\n    let sum = 0 ;\n    for(let i = 0 ; i < 20 ; ++i){\n      if(this.resultArray[i] === parseInt(this.quizeList[this.currentQuiz].questions[i].correct_answer)){\n        ++sum;\n      }\n    }\n    this.result = (sum/20)*100;\n    if(this.result >= 85){this.green = true}\n    if(this.result < 85 && this.result >= 45){this.blue = true}\n    if(this.result < 45){this.red = true}\n    console.log(this.result);\n    this.continue();\n  }\n\n  home(){\n    this.step = 2;\n  }\n\n  QuestionChange = ()=>{\n    if(this.currentQuestion <20){\n      this.resultArray[this.currentQuestion] = this.currentAnswere+1;\n      ++this.currentQuestion;\n      this.timer=30;\n    }\n    if(this.currentQuestion === 19){\n      document.getElementById(\"submitQuiz\").click();\n    }\n  }\n  \n  start = async ()=>{\n    console.log(\"start called\");\n    if(this.stopTimer === 0){\n    this.timerFunc();}\n  }\n\n  timerFunc = async () =>{\n    if(this.timer === 0){\n      document.getElementById(\"nextQuestion\").click();\n      this.start();\n    }\n    else{\n      setTimeout(() => {\n        --this.timer;\n        this.start();\n      }, 1000);\n  }\n}\n\n  startQuize = (index)=>{\n    this.currentQuiz = index;\n    this.continue();\n    this.start();\n  }\n\n  login = async (user : NgForm)=>{\n    if(!user || !user.valid) return;\n    this.RegistrationService.login(user.form.value).then(async (resp : any)=>{\n      if(resp[0] === 'LoggedIn'){\n        console.log(resp[1]);\n        this.userDetails = resp[1];\n        this.quizeList = resp[2];\n        console.log(this.quizeList);\n        this.step = 2; \n        \n      }\n    })\n  }  \n\n  async register(user : NgForm){\n      if(!user || !user.valid) return;\n      var userToSend = user.form.value;\n      console.log(userToSend);\n      this.RegistrationService.register(userToSend).then(async (result:any)=>{\n        if(result[0] === 'Recieved'){\n          this.userDetails=user.form.value;\n          this.quizeList = result[1];\n          this.step = 2;\n        }\n      }).catch((err)=>{\n        err = err || new Object();\n      });\n  }\n    continue(){\n      this.step = this.step + 1;\n    }\n\n  ngOnInit() {}\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule }   from '@angular/forms';\nimport { MainModuleRoutingModule } from \"./main-module.routing\"\nimport { MainModuleComponent } from './main-module.component';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [MainModuleComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    MainModuleRoutingModule,\n    NgbModule\n  ]\n})\nexport class MainModuleModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MainModuleComponent } from './main-module.component';\n\nconst routes: Routes = [\n  { path: '',  component: MainModuleComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MainModuleRoutingModule { }","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"footer-class\">\n  <div class=\"footer-logo\">\n    <a href=\"#\"><img src=\"assets/images/logo-new.png\"></a>\n  </div>\n  <hr>\n  <span class=\"copy-text\">&copy; Copyright 2020, Offorms. All rights reserved.</span>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\npublic loggedIn:any=false;\n  constructor(\n      private router: Router,\n\n  ) { }\n\n  home(){\n    this.router.navigate(['']);\n  }\n  ngOnInit() {\n\n  }\n\n}\n","<div class=\"header-class\">\n  <div class=\"header-logo\">\n    <a (click)=\"home()\"><img src=\"assets/images/logo-new.png\"></a>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}